@page "/checkout"
@inject HttpClient HttpClient
@inject OrderState OrderState
@inject NavigationManager NavigationManager


    <div class="main">
        <EditForm Model="OrderState.Order.DeliveryAddress" OnValidSubmit="PlaceOrder">
            <div class="checkout-cols">
                <div class="checkout-order-details">
                    <h4>Review order</h4>
                    <OrderReview Order="OrderState.Order" />
                </div>
                <div class="checkout-delivery-address">
                    <h4>Deliver to...</h4>
                    <AddressEditor Address="@OrderState.Order.DeliveryAddress" />
                </div>
            </div>

            <button class="checkout-button btn btn-warning" Disabled="@isSubmitting" type="submit" >
                @sumbitButtonText
            </button>
            <DataAnnotationsValidator />
        </EditForm>
    </div>


@code {

    public bool isSubmitting = false;
    public string sumbitButtonText = "Place order";
    async Task PlaceOrder()
    {
        await DisableSave();
        var newOrderId = await HttpClient.PostJsonAsync<int>("orders", OrderState.Order);
        OrderState.ResetOrder();


        NavigationManager.NavigateTo($"myorders/{newOrderId}");
    }

    async Task DisableSave()
    {
        isSubmitting = true;
        sumbitButtonText = "Saving...";
        await Task.Delay(1);
    }


}
